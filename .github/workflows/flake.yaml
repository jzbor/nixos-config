name: flake

on:
  push:
  pull_request:

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    # - name: 'Install Nix'
    #   uses: DeterminateSystems/nix-installer-action@main
    # # - name: 'Setup Nix cache'
    # #   uses: DeterminateSystems/magic-nix-cache-action@v3
    # - name: 'Run static checks'
    #   run: nix run nixpkgs#statix -- check .

  dead-code-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    - name: 'Install Nix'
      uses: DeterminateSystems/nix-installer-action@main
    # - name: 'Setup Nix cache'
    #   uses: DeterminateSystems/magic-nix-cache-action@v3
    - name: 'Run dead code checks'
      run: nix run nixpkgs#deadnix -- -_ -f .

  build-system:
    runs-on: ubuntu-latest
    needs: [static-analysis, dead-code-analysis]
    timeout-minutes: 45
    strategy:
      matrix:
        include:
          - system: 'x1-carbon'
            arch: 'x86_64-linux'
          - system: 'desktop-i5'
            arch: 'x86_64-linux'
          # - system: 'fsn1-03'
          #   arch: 'aarch64-linux'
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    - name: 'Install Nix'
      uses: DeterminateSystems/nix-installer-action@main
    # - name: 'Setup Nix cache'
    #   uses: DeterminateSystems/magic-nix-cache-action@v3
    - name: Setup Attic cache
      uses: ryanccn/attic-action@v0
      with:
        endpoint: ${{ secrets.ATTIC_ENDPOINT }}
        cache: ${{ secrets.ATTIC_CACHE }}
        token: ${{ secrets.ATTIC_TOKEN }}
        skip-push: true
    - name: 'Build system'
      run: nix build --extra-platforms ${{ matrix.arch }} .#nixosConfigurations.${{ matrix.system }}.config.system.build.toplevel

  build-system-fast:
    runs-on: ubuntu-latest
    needs: [static-analysis, dead-code-analysis]
    timeout-minutes: 45
    strategy:
      matrix:
        include:
          - system: 'x1-carbon'
            arch: 'x86_64-linux'
          - system: 'desktop-i5'
            arch: 'x86_64-linux'
          # - system: 'fsn1-03'
          #   arch: 'aarch64-linux'
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    - name: 'Install Nix'
      uses: DeterminateSystems/nix-installer-action@main
    # - name: 'Setup Nix cache'
    #   uses: DeterminateSystems/magic-nix-cache-action@v3
    - name: Setup Attic cache
      uses: ryanccn/attic-action@v0
      with:
        endpoint: ${{ secrets.ATTIC_ENDPOINT }}
        cache: ${{ secrets.ATTIC_CACHE }}
        token: ${{ secrets.ATTIC_TOKEN }}
        skip-push: true
    - name: 'Build system'
      run: nix run github:Mic92/nix-fast-build -- --systems ${{ matrix.arch }} --eval-workers 4 --eval-max-memory-size 3000 --skip-cached --flake ".#nixosConfigurations.${{ matrix.system }}.config.system.build.toplevel"

